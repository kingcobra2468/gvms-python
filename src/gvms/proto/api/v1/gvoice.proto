syntax = "proto2";

option go_package = "github.com/kingcobra2468/cot/internal/gvoice";

service GVoice {
    // Sends a message to the recipient.
    rpc SendSMS (SendSMSRequest) returns (SendSMSResponse) {}
    // Gets the contact list for a given GVoice account.
    rpc GetContactList (FetchContactListRequest) returns (FetchContactListResponse) {}
    // Gets all GVoice numbers that are accessible/ready to be used by the service.
    rpc GetGVoiceNumbers (FetchGVoiceNumbersRequest) returns (FetchGVoiceNumbersResponse) {}
    // Fetches the text-message history between a contact on a given GVoice account.
    rpc GetContactHistory (FetchContactHistoryRequest) returns (FetchContactHistoryResponse) {}
}

message SendSMSRequest {
    required string gvoice_phone_number = 1;
    required string recipient_phone_number = 2; 
    required string message = 3;
}

message SendSMSResponse {
    required bool success = 1;
    optional string error = 2 [default = ''];
}

message FetchContactListRequest {
    required string gvoice_phone_number = 1; 
}

message FetchContactListResponse {
    required bool success = 1;
    optional string error = 2 [default = ''];
    repeated string recipient_phone_numbers = 3;
}

message FetchGVoiceNumbersRequest {
}

message FetchGVoiceNumbersResponse {
    required bool success = 1;
    optional string error = 2 [default = ''];
    repeated string gvoice_phone_numbers = 3;
}

message FetchContactHistoryRequest {
    required string gvoice_phone_number = 1;
    required string recipient_phone_number = 2;
    required uint64 num_messages = 3 [default = 0];
}

message FetchContactHistoryResponse {
    required bool success = 1;
    optional string error = 2 [default = ''];
    repeated MessageNode messages = 3;
}

message MessageNode {
    required uint64 timestamp = 1; // Timestamp of the message.
    required string message_contents = 2;
    required bool source = 3; // Message origin with True meaning recipient and False meaning Gvoice.
}